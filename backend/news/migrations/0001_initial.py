# Generated by Django 5.1.5 on 2025-09-12 16:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NewsSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nombre del medio')),
                ('source_type', models.CharField(choices=[('newspaper', 'Periódico'), ('online', 'Medio digital'), ('social_media', 'Redes sociales'), ('rss', 'Feed RSS'), ('manual', 'Entrada manual')], max_length=20, verbose_name='Tipo de fuente')),
                ('city', models.CharField(choices=[('nacional', 'Nacional'), ('medellin', 'Medellín'), ('bogota', 'Bogotá'), ('cartagena', 'Cartagena'), ('barranquilla', 'Barranquilla')], max_length=50, verbose_name='Ciudad/Cobertura')),
                ('website_url', models.URLField(blank=True, verbose_name='Sitio web')),
                ('rss_url', models.URLField(blank=True, verbose_name='URL del RSS')),
                ('api_endpoint', models.URLField(blank=True, verbose_name='Endpoint API')),
                ('scraping_enabled', models.BooleanField(default=False, verbose_name='Scraping habilitado')),
                ('css_selectors', models.JSONField(blank=True, default=dict, help_text='JSON con selectores para título, contenido, fecha, etc.', verbose_name='Selectores CSS')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('reliability_score', models.FloatField(default=1.0, verbose_name='Puntuación de confiabilidad')),
                ('fetch_frequency_hours', models.PositiveIntegerField(default=6, verbose_name='Frecuencia de actualización (horas)')),
                ('last_fetched', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Fuente de noticias',
                'verbose_name_plural': 'Fuentes de noticias',
                'ordering': ['city', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SocialMediaPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'Twitter/X'), ('instagram', 'Instagram'), ('tiktok', 'TikTok')], max_length=20, verbose_name='Plataforma')),
                ('post_id', models.CharField(max_length=200, unique=True, verbose_name='ID de la publicación')),
                ('account_name', models.CharField(max_length=100, verbose_name='Cuenta')),
                ('account_url', models.URLField(blank=True, verbose_name='URL de la cuenta')),
                ('text_content', models.TextField(verbose_name='Contenido de texto')),
                ('media_urls', models.JSONField(blank=True, default=list, verbose_name='URLs de medios')),
                ('post_url', models.URLField(verbose_name='URL de la publicación')),
                ('likes_count', models.PositiveIntegerField(default=0, verbose_name='Likes')),
                ('shares_count', models.PositiveIntegerField(default=0, verbose_name='Compartidos')),
                ('comments_count', models.PositiveIntegerField(default=0, verbose_name='Comentarios')),
                ('location', models.CharField(blank=True, max_length=200, verbose_name='Ubicación')),
                ('posted_date', models.DateTimeField(verbose_name='Fecha de publicación')),
                ('business_relevance_score', models.FloatField(default=0.0, verbose_name='Puntuación de relevancia comercial')),
                ('extracted_keywords', models.JSONField(blank=True, default=list, verbose_name='Palabras clave extraídas')),
                ('sentiment_score', models.FloatField(default=0.0, verbose_name='Puntuación de sentimiento')),
                ('is_processed', models.BooleanField(default=False, verbose_name='Procesado')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Publicación en redes sociales',
                'verbose_name_plural': 'Publicaciones en redes sociales',
                'ordering': ['-posted_date'],
            },
        ),
        migrations.CreateModel(
            name='ManualNewsEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, verbose_name='Título')),
                ('content', models.TextField(verbose_name='Contenido')),
                ('event_type', models.CharField(choices=[('sports', 'Deportes'), ('cultural', 'Cultural'), ('gastronomy', 'Gastronomía'), ('education', 'Educación'), ('business', 'Negocios'), ('entertainment', 'Entretenimiento'), ('tourism', 'Turismo'), ('construction', 'Construcción'), ('transportation', 'Transporte'), ('weather', 'Clima'), ('government', 'Gobierno'), ('other', 'Otro')], max_length=20, verbose_name='Tipo de evento')),
                ('event_date', models.DateTimeField(verbose_name='Fecha del evento')),
                ('location', models.CharField(max_length=200, verbose_name='Ubicación')),
                ('source_notes', models.TextField(blank=True, verbose_name='Notas sobre la fuente')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('entered_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Ingresado por')),
            ],
            options={
                'verbose_name': 'Noticia manual',
                'verbose_name_plural': 'Noticias manuales',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NewsArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, verbose_name='Título')),
                ('content', models.TextField(verbose_name='Contenido')),
                ('url', models.URLField(unique=True, verbose_name='URL original')),
                ('author', models.CharField(blank=True, max_length=200, verbose_name='Autor')),
                ('published_date', models.DateTimeField(verbose_name='Fecha de publicación')),
                ('section', models.CharField(blank=True, max_length=100, verbose_name='Sección')),
                ('event_type', models.CharField(blank=True, choices=[('sports', 'Deportes'), ('cultural', 'Cultural'), ('gastronomy', 'Gastronomía'), ('education', 'Educación'), ('business', 'Negocios'), ('entertainment', 'Entretenimiento'), ('tourism', 'Turismo'), ('construction', 'Construcción'), ('transportation', 'Transporte'), ('weather', 'Clima'), ('government', 'Gobierno'), ('other', 'Otro')], max_length=20, null=True, verbose_name='Tipo de evento detectado')),
                ('event_date', models.DateTimeField(blank=True, null=True, verbose_name='Fecha del evento detectada')),
                ('event_location', models.CharField(blank=True, max_length=200, verbose_name='Ubicación del evento')),
                ('business_relevance_score', models.FloatField(default=0.0, verbose_name='Puntuación de relevancia comercial')),
                ('extracted_keywords', models.JSONField(blank=True, default=list, verbose_name='Palabras clave extraídas')),
                ('entities', models.JSONField(blank=True, default=list, verbose_name='Entidades detectadas')),
                ('sentiment_score', models.FloatField(default=0.0, verbose_name='Puntuación de sentimiento (-1 a 1)')),
                ('is_processed', models.BooleanField(default=False, verbose_name='Procesado por ML')),
                ('processing_error', models.TextField(blank=True, verbose_name='Error de procesamiento')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='news.newssource')),
            ],
            options={
                'verbose_name': 'Artículo de noticias',
                'verbose_name_plural': 'Artículos de noticias',
                'ordering': ['-published_date'],
                'indexes': [models.Index(fields=['published_date'], name='news_newsar_publish_274877_idx'), models.Index(fields=['event_type'], name='news_newsar_event_t_a96dbc_idx'), models.Index(fields=['business_relevance_score'], name='news_newsar_busines_9d5769_idx'), models.Index(fields=['is_processed'], name='news_newsar_is_proc_790ee4_idx')],
            },
        ),
    ]
