# Generated by Django 5.1.5 on 2025-10-19 16:14

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Identificador único (ej: sports_match, concert, festival)', max_length=50, unique=True, verbose_name='Código')),
                ('name_es', models.CharField(help_text='Nombre en español (ej: Partido deportivo)', max_length=100, verbose_name='Nombre (Español)')),
                ('name_en', models.CharField(help_text='Nombre en inglés (ej: Sports match)', max_length=100, verbose_name='Nombre (Inglés)')),
                ('description', models.TextField(blank=True, help_text='Descripción detallada del tipo de evento', verbose_name='Descripción')),
                ('relevance_category', models.CharField(choices=[('high', 'High Relevance'), ('medium', 'Medium Relevance'), ('low', 'Low Relevance')], default='medium', help_text='Nivel de relevancia para negocios de hospitalidad', max_length=10, verbose_name='Categoría de relevancia')),
                ('icon', models.CharField(blank=True, help_text='Nombre del icono (ej: trophy, music, fork-knife)', max_length=50, verbose_name='Icono')),
                ('is_active', models.BooleanField(default=True, help_text='Si está desactivado, no se detectará en nuevos artículos', verbose_name='Activo')),
                ('display_order', models.IntegerField(default=0, help_text='Orden para mostrar en listas (menor primero)', verbose_name='Orden de visualización')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tipo de Evento',
                'verbose_name_plural': 'Tipos de Eventos',
                'ordering': ['display_order', 'name_es'],
            },
        ),
        migrations.CreateModel(
            name='EventSubtype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Identificador del subtipo (ej: colombian_soccer, rock_concert)', max_length=100, verbose_name='Código')),
                ('name_es', models.CharField(help_text='Nombre en español (ej: Fútbol colombiano)', max_length=150, verbose_name='Nombre (Español)')),
                ('name_en', models.CharField(help_text='Nombre en inglés (ej: Colombian soccer)', max_length=150, verbose_name='Nombre (Inglés)')),
                ('description', models.TextField(blank=True, help_text='Descripción detallada del subtipo', verbose_name='Descripción')),
                ('is_active', models.BooleanField(default=True, help_text='Si está desactivado, no se detectará en nuevos artículos', verbose_name='Activo')),
                ('display_order', models.IntegerField(default=0, verbose_name='Orden de visualización')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtypes', to='event_taxonomy.eventtype', verbose_name='Tipo de evento padre')),
            ],
            options={
                'verbose_name': 'Subtipo de Evento',
                'verbose_name_plural': 'Subtipos de Eventos',
                'ordering': ['event_type', 'display_order', 'name_es'],
                'unique_together': {('event_type', 'code')},
            },
        ),
        migrations.CreateModel(
            name='ExtractionPattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target', models.CharField(choices=[('type', 'Event Type'), ('subtype', 'Event Subtype')], help_text='¿Este patrón detecta un tipo o un subtipo?', max_length=10, verbose_name='Objetivo del patrón')),
                ('pattern', models.CharField(help_text='Expresión regular en Python (ej: r"concierto", r"selección\\\\s+colombia")', max_length=500, verbose_name='Patrón regex')),
                ('description', models.CharField(blank=True, help_text='Descripción legible del patrón (ej: "detecta partidos de fútbol")', max_length=200, verbose_name='Descripción')),
                ('weight', models.FloatField(default=1.0, help_text='Importancia del patrón (0.1-10.0, default 1.0)', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(10.0)], verbose_name='Peso')),
                ('is_active', models.BooleanField(default=True, help_text='Si está desactivado, no se usará en la extracción', verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_subtype', models.ForeignKey(blank=True, help_text='Subtipo de evento (requerido solo si target=subtype)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patterns', to='event_taxonomy.eventsubtype', verbose_name='Subtipo de evento')),
                ('event_type', models.ForeignKey(blank=True, help_text='Tipo de evento (requerido si target=type o target=subtype)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patterns', to='event_taxonomy.eventtype', verbose_name='Tipo de evento')),
            ],
            options={
                'verbose_name': 'Patrón de Extracción',
                'verbose_name_plural': 'Patrones de Extracción',
                'ordering': ['-weight', 'id'],
            },
        ),
    ]
